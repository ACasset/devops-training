---

- name: Actions sur la machine backend
  hosts: backend
  tasks:
    - name: Installation des paquets nécessaires
      become: true
      ansible.builtin.package:
        name:
          - mysql-server
          - python3-PyMySQL
        state: present

    - name: Démarrage de la base de données
      become: true
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: true

    - name: Création d'une base de données dédiée sur le serveur MySQL
      become: true
      community.mysql.mysql_db:
        name: "{{ nom_bdd }}"

    - name: Création d'un utilisateur dédié sur le serveur MySQL
      become: true
      community.mysql.mysql_user:
        name: "{{ utilisateur_bdd }}"
        host: "{{ hostvars[groups.frontend[0]].ansible_host }}"
        password: "{{ mot_de_passe_bdd }}"
        priv: "{{ nom_bdd }}.*:ALL"
    
    - name: Ouverture du port MySQL sur le firewall
      become: true
      ansible.posix.firewalld:
        service: mysql
        permanent: true
        state: enabled
        immediate: true

- name: Actions sur la machine frontend
  hosts: frontend
  tasks:
    - name: Installation des paquets nécessaires
      become: true
      ansible.builtin.package:
        name:
          - nginx
          - php
          - php-mysqli
          - tar
          - python3-libsemanage
        state: present

    - name: Création du dossier pour WordPress
      become: true
      ansible.builtin.file:
        path: "/var/www/{{ nom_dossier_wordpress }}"
        state: directory
        owner: "{{ ansible_user}}"
        group: "{{ ansible_user }}"

    - name: Téléchargement et décompression de WordPress
      # become: true
      ansible.builtin.unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ nom_dossier_wordpress }}"
        # owner: nginx
        # group: nginx
        remote_src: true
        creates: "/var/www/{{ nom_dossier_wordpress }}/.initialized"

    - name: Récupération des salts WordPress
      ansible.builtin.uri:
        url: https://api.wordpress.org/secret-key/1.1/salt/
        return_content: true
      register: __wordpress_salts

    - name: Affichage des salts WordPress
      ansible.builtin.debug:
        var: wordpress_salts

    - name: Affichage des groupes
      ansible.builtin.debug:
        var: hostvars[groups.backend[0]].ansible_host

    - name: Copie du fichier de configuration WordPress
      # become: true
      ansible.builtin.template:
        # Comme on est dans le module 'template', Ansible va aller chercher le fichier dans le répertoire 'templates'
        src: wp-config.php.j2
        dest: "/var/www/{{ nom_dossier_wordpress }}/wordpress/wp-config.php"
        # owner: nginx
        # group: nginx
        mode: '0644'

    - name: Copie du fichier de configuration nginx
      become: true
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: /etc/nginx/conf.d/wordpress.conf
        mode: '0644'

    - name: Redémarrage de nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: true

    - name: Ouverture du port HTTP sur le firewall
      become: true
      ansible.posix.firewalld:
        service: http
        permanent: true
        state: enabled
        immediate: true

    - name: Autoriser nginx à se connecter à la base de données
      become: true
      ansible.posix.seboolean:
        name: httpd_can_network_connect
        state: true
        persistent: true

    # https://kaiten.design/how-to-automate-wordpress-and-wp-config-php-creation/
